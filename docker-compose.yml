x-base_service: &base_service
  stop_signal: SIGTERM
  restart: always
  tty: true
  stdin_open: true
  env_file: .env
  ipc: host

x-base_service_nvidia: &base_service_nvidia
  <<: *base_service
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            device_ids: ["0"]
            capabilities: [gpu]

# x-base_service_amd: &base_service_amd
#   <<: *base_service
#   profiles: ["amd"]
#   group_add:
#     - video
#   devices:
#     - "/dev/dri"
#     - "/dev/kfd"

x-base_service_vllm: &base_vllm
  env_file: .env
  image: vllm/vllm-openai:latest
  profiles: ["service", "server"]
  volumes:
    - ~/.cache/huggingface/:/root/.cache/huggingface
  ports:
    - "${VLLM_HOST_PORT}:${VLLM_CONT_PORT}"

x-base_service_ui: &base_ui
  profiles: ["service", "server"]
  ports:
    - "${UI_HOST_PORT}:${UI_CONT_PORT}"

x-base_service_omnipedia: &base_omnipedia
  profiles: ["service", "server"]
  ports:
    - "${OMNIPEDIA_HOST_PORT}:${OMNIPEDIA_CONT_PORT}"
  volumes:
    - /home/michael/Documents/WIKIDUMPS/${EXTRACT_DATE}/docstore:/db
    - ./core/prompt:/prompt

x-base_service_index: &base_index
  profiles: ["service", "server"]
  ports:
    - "${INDEX_HOST_PORT}:${INDEX_CONT_PORT}"
  volumes:
    - /home/michael/Documents/WIKIDUMPS/${EXTRACT_DATE}/index/thenlper/gte-small:/db

x-base_rust: &base_rust
  environment:
    RUST_LOG: $RUST_LOG

x-base_service_redis: &base_redis
  profiles: ["service", "server"]
  image: redis:latest
  command: >
    --requirepass ${REDIS_PASSWORD}
  ports:
    - $REDIS_PORT:$REDIS_PORT
  volumes:
    - /home/michael/ContainerData/Redis/oracle/data:/root/redis
    - /home/michael/ContainerData/Redis/oracle/redis.conf:/usr/local/etc/redis/redis.conf

x-base_service_postgres: &base_postgres
  image: postgres
  shm_size: 1gb

x-base_service_postgres_prod: &base_postgres_prod
  <<:
    - *base_postgres
  volumes:
    - /home/michael/ContainerData/PostgreSQL/oracle/${EXTRACT_DATE}:/var/lib/postgresql/data
  profiles: ["service", "server"]
  ports:
    - $POSTGRES_PORT:$POSTGRES_PORT

x-base_service_postgres_dummy: &base_postgres_dummy
  <<:
    - *base_postgres
  volumes:
    - /home/michael/ContainerData/PostgreSQL/oracle/dummy/:/var/lib/postgresql/data
  profiles: ["dummy"]
  ports:
    - $POSTGRES_DUMMY_PORT:$POSTGRES_PORT

x-base_service_postgres_prod_gid: &base_postgres_prod_gid_fix
  <<:
    - *base_postgres_prod
  user: 1000:1000

x-base_service_postgres_dummy_gid: &base_postgres_dummy_gid_fix
  <<:
    - *base_postgres_dummy
  user: 1000:1000

x-base_service_infinity: &base_infinity
  image: michaelf34/infinity:latest
  profiles: ["service", "server"]
  volumes:
    - ~/.cache/huggingface/hub/:/app/.cache/torch
  ports:
    - "${EMBED_HOST_PORT}:${EMBED_CONT_PORT}"

services:
  infinity:
    <<:
      - *base_service_nvidia
      - *base_infinity
    entrypoint:
      [
        infinity_emb,
        --url-prefix,
        "/v1",
        --model-name-or-path,
        "$SBERT_MODEL_NAME",
        --port,
        "$EMBED_CONT_PORT",
        --device,
        cuda,
        --batch-size,
        "$BATCH_SIZE",
      ]

  ui:
    <<:
      - *base_service
      - *base_ui
    build:
      dockerfile: Dockerfile
      context: ./typescript

  vllm:
    <<:
      - *base_service_nvidia
      - *base_vllm
    entrypoint:
      [
        python3,
        -m,
        vllm.entrypoints.openai.api_server,
        --max-log-len,
        "0",
        --disable-log-stats,
        --disable-log-requests,
        --gpu-memory-utilization,
        "0.85",
        --model,
        $LLM_MODEL_NAME,
        --host,
        "0.0.0.0",
        --port,
        $VLLM_CONT_PORT,
        --dtype,
        half,
        --max-model-len,
        $MAX_MODEL_LEN,
      ]

  redis:
    <<:
      - *base_service
      - *base_redis

  postgres:
    <<:
      - *base_service
      - *base_postgres_prod_gid_fix

  postgres_dummy:
    <<:
      - *base_service
      - *base_postgres_dummy_gid_fix

  omnipedia:
    <<:
      - *base_service
      - *base_omnipedia
      - *base_rust
    build:
      dockerfile: Dockerfile
      context: ./core

  index:
    <<:
      - *base_service
      - *base_index
      - *base_rust
    build: https://github.com/MichaelMcCulloch/face.git#0.1.1
    entrypoint: [face, --index-path, $INDEX_PATH]
